---
# Role tasks

- name: Find out what DNS records could be overwriten
  vars:
    win_dns_records_to_manage: >-
      {{ win_dns_records
         + ((win_dns_records_load_from_hostvars)
            | ternary(win_dns_records_hostvars
                      | default([])
                      | flatten, [])) }}
    name: >-
      {{ win_dns_records_item.name
         | default("") }}
    type: >-
      {{ win_dns_records_item.type
         | default("") }}
    zone: >-
      {{ win_dns_records_item.zone
         | default("") }}
    computer_name: >-
      {{ win_dns_records_item.computer_name
         | default("") }}
  win_shell: |-
    # Parameters
    $name="{{ name }}"
    $type="{{ type }}"
    $zone="{{ zone }}"
    $dns_computer_name = "{{ computer_name }}"

    # External computer
    $extra_args = @{}
    if ("" -ne $dns_computer_name) {
        $extra_args.ComputerName = $dns_computer_name
    }

    # Record detection
    Try {
        $record_obj = Get-DnsServerResourceRecord `
          -ZoneName $zone `
          -Name $name `
          -RRType $type `
          -Node -ErrorAction:Ignore `
          @extra_args
    }
    Catch {
        $record_obj = $null
        Write-Host "Error while adding pointer record:`n$($Error[0].Exception.Message)"

    }
    If ($record_obj) { "present" } Else { "absent" }
  when: >-
    (not win_dns_records_item.overwrite | default(True))
    and (win_dns_records_item.state | default('present')) == 'present'
  loop: "{{ win_dns_records_to_manage }}"
  loop_control:
    loop_var: win_dns_records_item
    index_var: win_dns_records_index
    label: >-
      [{{ win_dns_records_item.type | default('') }}]
      {{ win_dns_records_item.name | default('') }} -
      {{ win_dns_records_item.zone | default('') }}
  changed_when: no
  no_log: "{{ win_dns_records_no_log }}"
  register: get_dns_result
  tags:
    - role::win_dns_records

- name: Setup DNS records
  win_dns_record:
    name: >-
      {{ win_dns_records_item.name
         | default(omit) }}
    type: >-
      {{ win_dns_records_item.type
         | default(omit) }}
    value: >-
      {{ win_dns_records_item.value
         | default(omit) }}
    zone: >-
      {{ win_dns_records_item.zone
         | default(omit) }}
    state: >-
      {{ win_dns_records_item.state
         | default(omit) }}
    ttl: >-
      {{ win_dns_records_item.ttl
         | default(omit) }}
    computer_name: >-
      {{ win_dns_records_item.computer_name
         | default(omit) }}
  vars:
    win_dns_records_to_manage: >-
      {{ win_dns_records
         + ((win_dns_records_load_from_hostvars)
            | ternary(win_dns_records_hostvars
                      | default([])
                      | flatten, [])) }}
    record_should_be_absent: >-
      {{ (win_dns_records_item.state | default('present')) == 'absent' }}
    overwrite_record: "{{ win_dns_records_item.overwrite | default(False) }}"
    record_is_present: >-
      {{ "present" in
      (get_dns_result.results[win_dns_records_index].stdout
      | default("absent")) }}
  when: >-
    record_should_be_absent | ternary(True, overwrite_record or not record_is_present)
  loop: "{{ win_dns_records_to_manage }}"
  loop_control:
    loop_var: win_dns_records_item
    index_var: win_dns_records_index
    label: >-
      [{{ win_dns_records_item.type | default('') }}]
      {{ win_dns_records_item.name | default('') }} -
      {{ win_dns_records_item.value | default('') }}
      {{ record_is_present | ternary('♻️  overwrite','') }}
  no_log: "{{ win_dns_records_no_log }}"
  register: set_dns_result
  tags:
    - role::win_dns_records
